<?xml version="1.0"?>

<project name="freeguide-tv-build" default="build-all">

	<import file="build-plugins-info.xml"/>
	<import file="build-prebuild.xml"/>
    <import file="../build.xml"/>
	
    <target name="build-all" depends="prepare, compile, jar-common, jar-plugins, jar-startup, compile-doc"/>

    <target name="compile">
        <mkdir dir="${build}/classes"/>
        <!-- compile all the .java files -->
        <javac srcdir="${src}"
            destdir="${build}/classes"
            deprecation="on" 
            source="1.4" 
            target="1.4"
            debug="yes"
            encoding="UTF-8">
            <classpath>
                <fileset dir="${lib}" includes="**/*.jar"/>
            </classpath>
            <!-- Uncomment to show warnings <compilerarg value="-Xlint:unchecked"/>-->
          </javac>
        <!-- AJB - I think this is not needed copy todir="${build}/classes/common">
            <fileset dir="${src}/java-common" excludes="**/*.java" />
        </copy-->
    </target>
    
    <target name="jar-common">
        <!-- Create the common.jar file -->
    	<mkdir dir="${build}/package/lib"/>
        
        <jar jarfile="${build}/package/lib/common.jar"
             basedir="${build}/classes"
             includes="freeguide/common/**">
             <fileset dir="${src}" includes="resources/i18n/*"/>
        </jar>
        
        <!-- Copy everything from within lib to the lib dir inside build/package -->
        <copy todir="${build}/package/lib">
            <fileset dir="${lib}" includes="**/*.jar"/>
        </copy>
    </target>
    
    <target name="jar-plugins">
        <antcall target="all-plugins">
            <param name="actual-target" value="subtask-jar-one-plugin"/>
        </antcall>
    </target>    
    
    <target name="subtask-jar-one-plugin">
        
    	<mkdir dir="${build}/package/lib"/>
        
        <!-- Ensure the classes dir exists or the jar file creation will bork -->
        <!--mkdir dir="${build}/classes/freeguide/plugins/${plugin-dir}"/>
        <copy todir="${build}/classes/freeguide/plugins/">
            <fileset dir="${src}/freeguide/plugins/"
                includes="${plugin-dir}/**"
                excludes="*.java,*.class" />
        </copy-->
        
        <!-- TODO: remove the following line and make it still work! -->
        <mkdir dir="${src}/freeguide/plugins/${plugin-dir}"/>
        
        <!-- Build the JAR file for this plugin -->
        <zip zipfile="${build}/package/lib/${plugin-id}.jar" whenempty="skip">
            <fileset dir="${build}/classes" includes="freeguide/plugins/${plugin-dir}/**"/>
            <fileset dir="${src}" includes="resources/plugins/${plugin-dir}/**"/>
            <fileset dir="${src}/freeguide/plugins/${plugin-dir}"
                includes="plugin.xml"/>
        </zip>
         
    </target>
    
    <target name="jar-startup">
        <mkdir dir="${build}/package/lib"/>
        <jar jarfile="${build}/package/startup.jar"
             basedir="${build}/classes"
             includes="freeguide/startup/**"
             manifest="${src}/resources/manifests/startup.mf" />
    </target>
    
    <target name="compile-doc">
    	
        <!-- The task below does not work with our docs for some reason.
             For now, we compile the docs on Linux and commit them to SVN.
             So all we have to do here is copy them in to the build dir. -->
        
        <copy todir="${build}/package/doc">
            <fileset dir="${doc}/html-local"/>
        </copy>
        
    </target>
     
     <target name="really-compile-doc-java" depends="prebuild-buildclasses"
            description="DOES NOT WORK: use our own custom Java code to build the docs" >
        <java classpath="${build}/buildclasses"
    	    	classname="freeguide.build.docxslt.DocXSLT"
    	    	fork="true"/>
        <!-- TODO: copy the .html files etc. from doc/* -->
     </target>
     
     <target name="really-compile-doc-sh"
            description="If we're on Linux, make the docs using a shell script.">
        <chmod file="${doc}/compile_manual.sh" perm="ugo+rx"/>
        <exec dir="${doc}" executable="compile_manual.sh" resolveexecutable="true" failonerror="true"/>
        <!-- NOTE: this script currently compiles from doc/* to doc/html-web/*,
             but for this to work smoothly, it would need to compile to
             build/package/doc. -->
    </target>
    
</project>

