<?xml version="1.0"?>

<project name="freeguide-tv-plugins" default="main" basedir=".">

    <description>
        Ant build file for FreeGuide.
    </description>
    
    <!--
     List of files containing FreeGuide's version number:
     
     - build.xml
     - doc/VERSION.php
     - src/java/freeguide/FreeGuide.java
     - src/install-linux/freeguide.spec (2 places)
     - src/install-linux/freeguide.1
     - src/install/windows/freeguide.nsi
     
     All of these must be updated when a new version is made.
    -->

    <!-- set global properties for this build -->
    <property name="src" location="src" />
    <property name="doc"  location="doc" />
    <property name="xmltv"  location="xmltv" />
    <property name="share"  location="xmltv/share" />
    <property name="build" location="build" />
    <property name="dist"  location="dist" />
    <property name="resources"  location="src/resources" />
    
    <property name="freeguideversion"  value="FreeGuide-0.10.1" />

    <target name="init">

        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />

    </target>

    <target name="create-properties-lists">
        <!--exec executable="sh" dir="${src}/resources/i18n" output="${src}/resources/i18n/ls">
        	<arg value="-c"/>
        	<arg value="ls *"/>
    	</exec>
        <exec executable="sh" dir="${src}/resources/xmltv" output="${src}/resources/xmltv/ls">
        	<arg value="-c"/>
        	<arg value="ls *"/>
    	</exec-->
  	</target>

    <target name="install-Linux-NoXMLTV-files"
            description="install all the files for linux"
            depends="jar" >
        
        <!-- These properties are passed in from the rpm .spec file:
            install_share_dir = ~/.rpm/tmp/FreeGuide-0.8.2-root//usr/share
            install_bin_dir   = ~/.rpm/tmp/FreeGuide-0.8.2-root//usr/bin
            install_doc_dir   = ~/.rpm/tmp/FreeGui...usr/doc/freeguide
            install_real_doc_dir = /usr/doc/freeguide
        -->
        
        <property name="install_jar_dir"
            location="${install_share_dir}/freeguide" />

        <property name="install_pixmap_dir" location="${install_share_dir}/pixmaps/freeguide" />
        
        <mkdir dir="${install_jar_dir}" />
        <copy file="${build}/FreeGuide.jar"
            tofile="${install_jar_dir}/FreeGuide.jar" />

        <!-- Copy the different-sized icons to the freeguide pixmaps dir -->
        <mkdir dir="${install_pixmap_dir}" />
        <copy todir="${install_pixmap_dir}/" >
            <fileset dir="${src}/images">
                <include name="logo-*.png" />
                <exclude name="logo-192x192.png" />
                <exclude name="logo-256x256.png" />
            </fileset>
        </copy>
        
        <copy tofile="${install_share_dir}/pixmaps/freeguide.png" 
            file="${src}/images/logo-32x32.png" />
            
        <!-- Creating the launch script: first we need to copy the source launch script, then we replace the string "__ANT_DOC_DIRECTORY__" with the docs directory, and then we move it into place and make it executable. -->
        <copy file="${src}/install-linux/freeguide" tofile="${src}/install-linux/freeguide.tmp" />
        <replace file="${src}/install-linux/freeguide.tmp" token="__ANT_DOC_DIRECTORY__" value="${install_real_doc_dir}" />
        <mkdir dir="${install_bin_dir}" />
        <move file="${src}/install-linux/freeguide.tmp" tofile="${install_bin_dir}/freeguide" />
        <chmod file="${install_bin_dir}/freeguide" perm="a+x" />
        
        <mkdir dir="${install_share_dir}/applications" />
        <copy file="${src}/install-linux/freeguide.desktop" todir="${install_share_dir}/applications/" />

        <mkdir dir="${install_share_dir}/man/man1" />
        <copy file="${build}/freeguide.1.gz" todir="${install_share_dir}/man/man1/" />
        
        <mkdir dir="${install_doc_dir}" />
        <copy todir="${install_doc_dir}/">
            <fileset dir="${doc}">
                <include name="*.html" />
                <include name="*.png" />
                <include name="*.css" />
                <include name="COPYING" />
                <include name="TODO" />
                <exclude name="bugreport.html" />
            </fileset>
        </copy>
        
    </target>
    
    <target name="compile" depends="init, create-properties-lists" description="compile the source " >

        <mkdir dir="${build}/classes"/>
        <!-- compile all the .java files -->
        <javac srcdir="${src}/java"
        	destdir="${build}/classes"
        	deprecation="on" 
        	source="1.4" 
        	target="1.4"
            encoding="UTF-8">
        	<classpath>
        		<fileset dir="${src}/lib" includes="**/*.jar"/>
        	</classpath>
      	</javac>

        <copy todir="${build}/classes">
            <fileset dir="${src}/resources" excludes="images/**" />
            <fileset dir="${src}/resources/images"
                includes="logo-256x256.png,logo-16x16.png" />
        	<fileset dir="${src}/java" excludes="**/*.java" />
      	</copy>
    	
        <!-- generate the fake resource file -->
        <!--<exec executable="python" dir="${resources}">
            <arg line="generate_REVERSECAPS.py" />
        </exec>-->
        
    </target>

    <target name="jar" depends="compile"
            description="generate the windows jar file" >

        <mkdir dir="${build}" />
        
        <!-- Make the jar file -->
        <jar 	jarfile="${build}/FreeGuide.jar"
                basedir="${build}/classes"
                manifest="${src}/manifests/FreeGuide.mf" />
        
    </target>

    <target name="FreeGuide-Source" depends="init"
        description="generate the source tar.gz and zip">

        <tar destfile="${dist}/${freeguideversion}.tar.gz" compression="gzip" >
            <tarfileset dir="${src}" prefix="${freeguideversion}/src">
                <exclude name="**/.xvpics/**" />
            </tarfileset>
            <tarfileset dir="${doc}" prefix="${freeguideversion}/doc">
                <exclude name="**/.xvpics/**" />
            </tarfileset>
            <tarfileset dir="." includes="build.xml" prefix="${freeguideversion}" />
            <tarfileset dir="xmltv"
                includes="*"
                excludes="CVS/**"
                prefix="${freeguideversion}/xmltv" />
            <tarfileset dir="stats"
                includes="*.sh,*.py,barchart"
                prefix="${freeguideversion}/stats" />
        </tar>
        <zip zipfile="${dist}/${freeguideversion}.zip">
            <zipfileset dir="${src}" prefix="${freeguideversion}/src">
                <exclude name="**/.xvpics/**" />
            </zipfileset>
            <zipfileset dir="${doc}" prefix="${freeguideversion}/doc">
                <exclude name="**/.xvpics/**" />
            </zipfileset>
            <zipfileset dir="." includes="build.xml" prefix="${freeguideversion}" />
            <zipfileset dir="xmltv"
                includes="*"
                excludes="CVS/**"
                prefix="${freeguideversion}/xmltv" />
            <zipfileset dir="stats"
                includes="*.sh,*.py,barchart"
                prefix="${freeguideversion}/stats" />
        </zip>

    </target>

    <target name="main" depends="FreeGuide-Source, jar"
        description="generate all the installers" >
        <!-- gzip the man page -->
        <gzip src="${src}/install-linux/freeguide.1" zipfile="${build}/freeguide.1.gz" />
        <copy todir="${build}">
        	<fileset dir="${src}/lib" includes="**/*.jar"/>
      	</copy>
    </target>

    <target name="clean"
        description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}" />
        <delete dir="${dist}" />
    </target>
    
</project>

